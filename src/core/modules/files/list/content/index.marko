import { mdiFolderOutline, mdiFileOutline, mdiContentCopy } from "@mdi/js"
import buttons from "./buttons.js"
import actions from "./actions.js"

<if(state.ready)>
    <hadmin-title admin=true title=(process.browser && window.__heretic ? window.__heretic.t("moduleTitleAdmin") : null)/>
    <div class="buttons mb-1" on-click("onTopButtonClick")>
        <for|button| of=buttons>
            <if(button.separator)>
                <div class="hr-fs-button-separator"/>
            </if>
            <else>
                <button data-tippy-content=(process.browser ? window.__heretic.t(button.label) : "") data-id=button.id class=`button${button.danger ? " is-danger hr-fs-button-danger" : " is-light"}` disabled=(state.loading || state.disabled[button.id])>
                    <span class="hr-fs-top-button-icon icon">
                        <svg viewBox="0 0 24 24" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                            <path d=button.icon/>
                        </svg>
                    </span>
                </button>
            </else>
        </for>
    </div>
    <div class="columns m-0 mb-3 p-2 hr-fs-panel is-mobile">
        <div class="column m-0 p-0 is-narrow is-flex is-align-items-center">
            <t class="has-text-weight-semibold">currentDir</t>:
        </div>
        <div class="column m-0 p-0 is-flex is-align-items-center">
            <if(state.dir)>
                <nav class="breadcrumb hr-fs-dir-breadcrumb" on-click("onBreadcrumbClick")>
                    <ul>
                        $ let dirPath = "";
                        <for|d| of=state.dir.split("/")>
                            <if(d)>
                                $ dirPath += `/${d}`;
                                <li>
                                    <a href="#" data-path=dirPath>
                                        <span>${d}</span>
                                    </a>
                                </li>
                            </if>
                            <else>
                                <li>
                                    <a href="#" data-path="">
                                        <t class="hr-fs-root-dir">rootDir</t>
                                    </a>
                                </li>
                            </else>
                        </for>
                    </ul>
                </nav>
            </if>
            <else>
                <nav class="breadcrumb hr-fs-dir-breadcrumb" on-click("onBreadcrumbClick")>
                    <ul>
                        <li>
                            <a href="#" data-path="">
                                <t class="hr-fs-root-dir">rootDir</t>
                            </a>
                        </li>
                    </ul>
                </nav>
            </else>
        </div>
        <div class="column m-0 p-0 is-narrow">
            <if(state.clipboard)>
                <div class="control">
                    <div class=`dropdown is-hoverable${state.mobile ? "" : " is-right"}`>
                        <div class="dropdown-trigger">
                            <div class="tags has-addons">
                                <span class=`tag ${state.clipboard.mode === "copy" ? "is-success" : "is-danger"}`>${process.browser ? window.__heretic.t(state.clipboard.mode) : ""}</span>
                                <span class="tag is-link">${state.clipboard.files.length}</span>
                                <a class="tag is-delete" on-click("onDropClipboard")/>
                            </div>
                        </div>
                        <div class="dropdown-menu">
                            <div class="dropdown-content">
                                <div class="dropdown-item">
                                    <p>
                                        <t class="has-text-weight-semibold">sourceDir</t>:&nbsp;${state.clipboard.src || "/"}
                                    </p>
                                    <p class="mt-2">
                                        <t class="has-text-weight-semibold">clipboardContents</t>
                                        <if(state.clipboard.files.length > 5)>&nbsp;(${state.clipboard.files.length})</if>:
                                    </p>
                                    <p class="mt-2">
                                        <div class="content m-0">
                                            <ul>
                                                <for|f, i| of=state.clipboard.files>
                                                    <if(i < 5)>
                                                        <li>${f}</li>
                                                    </if>
                                                </for>
                                            </ul>
                                        </div>
                                    </p>
                                    <if(state.clipboard.files.length > 5)>
                                        <p class="ml-3">...</p>
                                    </if>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </if>
        </div>
    </div>
    <if(state.files)>
        <div class="hr-fs-files">
            <if(state.loading)>
                <div class="hr-fs-files-loading">
                    <hloading-dots/>
                </div>
            </if>
            <div class="columns p-0 m-0 hr-fs-head" id="hr_fs_head_wrap" on-click("updateFilesSort")>
                <div class="column is-narrow p-2">
                    <label class="checkbox hr-fs-head-checkbox">
                        <input type="checkbox" checked=(state.files.length && state.checked.length === state.files.length) disabled=!state.files.length on-change("onCheckboxAllChange")/> 
                    </label>
                </div>
                <div class="column pt-2 pb-2 pr-2 pl-0 hr-fs-col hr-fs-col-sortable hr-fs-col-filename" data-id="name">
                    <sortIcon sortDir=(state.sort === "name" ? state.sortDir : null)/>
                    <t>fileName</t>
                </div>
                <div class="column is-narrow p-2 hr-fs-col hr-fs-col-sortable hr-fs-col-ext" data-id="ext">
                    <sortIcon sortDir=(state.sort === "ext" ? state.sortDir : null)/>
                    <t>fileType</t>
                </div>
                <div class="column is-narrow p-2 hr-fs-col hr-fs-col-sortable hr-fs-col-ext" data-id="size">
                    <sortIcon sortDir=(state.sort === "size" ? state.sortDir : null)/>
                    <t>fileSize</t>
                </div>
                <div class="column is-narrow p-2 hr-fs-col hr-fs-col-sortable hr-fs-col-permissions" data-id="permissions">
                    <sortIcon sortDir=(state.sort === "permissions" ? state.sortDir : null)/>
                    <t>filePermissions</t>
                </div>
                <div class="column is-narrow p-2 hr-fs-col hr-fs-col-controls">
                    <div class="hr-fs-cell-controls hr-fs-head-cell-controls">
                        <t>controls</t>
                    </div>
                </div>
            </div>
            <div id="hr_fs_files_wrap" on-click("onFileClick")>
                <if(state.files.length)>
                    <for|item, index| of=state.files>
                        <div class=`columns p-0 m-0${item.dir ? " hr-fs-dir" : " hr-fs-file"}${index === state.files.length - 1 ? " hr-fs-bottomItem" : ""}${index % 2 !== 0 ? (item.dir ? " hr-fs-dir-odd" : " hr-fs-file-odd") : ""}` data-id=item.name data-filename=item.name>
                            <div class="column is-narrow p-2 is-flex is-align-items-center">
                                <label class="checkbox">
                                    <input data-checkboxid=item.name type="checkbox" checked=(state.checked.indexOf(item.name) > -1)/>
                                </label>
                            </div>
                            <div class="column p-0 pr-2 is-flex is-align-items-center hr-fs-file-clickable-area hr-fs-col-filename hr-fs-col-filename-clipped" data-click=true>
                                <span class="icon hr-fs-file-icon pr-1">
                                    <svg viewBox="0 0 24 24" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                                        <path d=(item.dir ? mdiFolderOutline : mdiFileOutline)/>
                                    </svg>
                                </span>
                                ${item.name}
                            </div>
                            <div class="column is-narrow p-2 is-flex is-align-items-center hr-fs-col-ext">
                                <span class="tag hr-fs-tag">${item.dir ? (process.browser ? window.__heretic.t("typeFolder") : "") : item.ext.toUpperCase() || "–"}</span>
                            </div>
                            <div class="column is-narrow p-2 is-flex is-align-items-center hr-fs-col-size">${item.dir ? "–" : `${parseInt(item.size, 10)} ${process.browser ? window.__heretic.t(item.sizeUnit) : ""}`}</div>
                            <div class="column is-narrow p-2 is-flex is-align-items-center hr-fs-col-permissions">
                                <span class="tag hr-fs-tag">${item.permissions}</span>
                            </div>
                            <div class=`column is-narrow hr-fs-col-controls`>
                                <div class="hr-fs-cell-controls">
                                    <for|action| of=actions>
                                        <div class=(action.menu ? `dropdown${state.mobile ? "" : " is-right"}${state.actionMenu === action.id + item.name ? " is-active" : ""}` : "")>
                                            <div class=(action.menu ? "dropdown-trigger" : "")>
                                                <button data-tippy-content=(process.browser ? window.__heretic.t(action.label) : "") data-id=action.id class=`button is-small hr-fs-file-button${action.danger ? " is-danger hr-fs-action-danger" : " is-light"}` disabled=state.loading aria-haspopup=(action.menu ? "true" : "false") aria-controls=`hr_fs_dropdown_${action.id}` data-dropdown=(action.menu ? action.id + item.name : null)>
                                                    <span class="hr-fs-top-button-icon icon">
                                                        <svg viewBox="0 0 24 24" width="24" height="24" xmlns="http://www.w3.org/2000/svg">
                                                            <path d=action.icon/>
                                                        </svg>
                                                    </span>
                                                </button>
                                            </div>
                                            <div class="dropdown-menu" id=`hr_fs_dropdown_${action.id + item.name}` role="menu">
                                                <div class="dropdown-content">
                                                    <for|actionMenuItem| of=action.menu>
                                                        <if((actionMenuItem.dir !== false || (actionMenuItem.dir === false && !item.dir)) && (actionMenuItem.binary !== false || (actionMenuItem.binary === false && !item.binary)) && (!actionMenuItem.ext || actionMenuItem.ext === item.ext))>
                                                            <a href="#" class="dropdown-item" data-id=actionMenuItem.id>${process.browser ? window.__heretic.t(actionMenuItem.label) : actionMenuItem.label}</a>
                                                        </if>
                                                    </for>
                                                </div>
                                            </div>
                                        </div>
                                    </for>
                                </div>
                            </div>
                        </div>
                    </for>
                </if>
                <else>
                    <div class=`columns p-0 m-0 hr-fs-file hr-fs-bottomItem`>
                        <div class="column p-2">
                            <t>noFilesToDisplay</t>
                        </div>
                    </div>
                </else>
            </div>
        </div>
    </if>
    <div id="hr_fs_dummy"/>
    <hnotify admin=true key="notify"/>
    <nameModal key="nameModal" on-data("onNameModalData") on-notification("onNotification")/>
    <uploadModal key="uploadModal" on-done("onUploadDone") on-notification("onNotification")/>
    <progressModal key="progressModal" on-close("onProgressClose") on-notification("onNotification")/>
    <hmodal
        admin=input.admin
        key="deleteConfirmation"
        id="deleteConfirmation"
        on-button-click("onDeleteConfirmationButtonClick")
        close=true
        title="deleteConfirmationTitle"
        actions=[
            {
                id: "confirm",
                label: "confirm",
                class: "button is-danger"
            },
            {
                id: "cancel",
                label: "cancel",
                class: "button is-light",
                close: true
            }
        ]>
        <section
            class="modal-card-body"
            style={
                order: "2"
            }>
            <p>
                <t>deleteConfirmationMessage</t>
            </p>
            <p class="mt-2 notification">${state.deleteList.join(", ")}</p>
        </section>
    </hmodal>
    <editorModal key="editorModal" on-save("onFileSave") on-hide("onEditorModalHide")/>
    <archiveModal key="archiveModal" on-data("onArchiveModalData") on-notification("onNotification")/>
</if>
<if(!state.ready && !state.failed)>
    <!-- <hloading active=true/> -->
</if>
<if(state.failed)>
    <div class="notification is-danger">
        <t>couldNotLoadData</t>
    </div>
</if>
