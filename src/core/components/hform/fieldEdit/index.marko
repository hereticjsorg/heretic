import { mdiReload } from '@mdi/js'

<!-- Text Field: Start -->
<if(input.type === "text")>
    <div>
        <div class="field">
            <label class="label hr-hf-label">
                ${input.label || ""}<span>:</span>
                <if(input.mandatory)>
                    &nbsp;<span class="hr-hf-label-mandatory">✱</span>
                </if>
            </label>
            <div class="control" no-update>
                <input id=`hr_hf_el_${input.formId}_${input.id}` class="input hr-hf-text-input" type=(input.fieldType || "text") placeholder=(input.placeholder || "")/>
            </div>
            <if(state.error)>
                <div class="hr-hf-error-wrap">
                    <p class="tag is-danger hr-hf-error-tag">${state.error}</p>
                </div>
            </if>
            <if(input.helpText)>
                <p class="help">${input.helpText}</p>
            </if>
        </div>
    </div>
</if>
<!-- Text Field: End -->
<!-- Buttons: Start -->
<if(input.type === "buttons")>
    <div class=`buttons ${input.css || ""}`>
        <for|item| of=input.items>
            <button id=`hr_hf_el_${input.formId}_${input.id}_${item.id}` class=(item.css || "") type=item.type data-type=item.type data-id=item.id on-click("onButtonClick")>${item.label}</button>
        </for>
    </div>
</if>
<!-- Buttons: End -->
<!-- Select: Start -->
<if(input.type === "select")>
    <div>
        <div class="field">
            <label class="label hr-hf-label">
                ${input.label || ""}<span>:</span>
                <if(input.mandatory)>
                    &nbsp;<span class="hr-hf-label-mandatory">✱</span>
                </if>
            </label>
            <div class="control">
                <div class="select is-fullwidth">
                    <select id=`hr_hf_el_${input.formId}_${input.id}` on-change("onSelectChange") value=state.value>
                        <for|o| of=input.options>
                            <option value=o.value selected=(o.value === state.value)>${o.label}</option>
                        </for>
                    </select>
                </div>
            </div>
            <if(state.error)>
                <div class="hr-hf-error-wrap">
                    <p class="tag is-danger hr-hf-error-tag">${state.error}</p>
                </div>
            </if>
            <if(input.helpText)>
                <p class="help">${input.helpText}</p>
            </if>
        </div>
    </div>
</if>
<!-- Select: End -->
<!-- Files: Start -->
<if(input.type === "files")>
    <div>
        <div class="field">
            <label class="label hr-hf-label">
                ${input.label || ""}<span>:</span>
                <if(input.mandatory)>
                    &nbsp;<span class="hr-hf-label-mandatory">✱</span>
                </if>
            </label>
            <div class="control">
                <label class="file-label">
                    <input class="file-input" type="file" multiple=(input.multiple || false) data-id=input.id on-change("onFileInputChange")/>
                    <a class="hr-hf-file-cta file-cta button is-light" tabindex="0">
                        <span class="file-label">${input.buttonLabel}</span>
                    </a>
                </label>
            </div>
            <if(state.value && state.value.length)>
                <div class="mt-2">
                    <for|f| of=state.value>
                        <div>
                            <button class="delete is-small mt-1 mr-2" data-uid=f.uid on-click("onFileInputDeleteClick")/>
                            <if(f.url)>
                                <a href=f.url target="_blank">${f.name}</a>
                            </if>
                            <else>${f.name}</else>
                        </div>
                    </for>
                </div>
            </if>
            <if(state.error)>
                <div class="hr-hf-error-wrap">
                    <p class="tag is-danger mt-2">${state.error}</p>
                </div>
            </if>
            <if(input.helpText)>
                <p class="help">${input.helpText}</p>
            </if>
        </div>
    </div>
</if>
<!-- Files: End -->
<!-- Captcha Field: Start -->
<if(input.type === "captcha")>
    <div>
        <div class="field">
            <label class="label hr-hf-label">
                ${input.label || ""}<span>:</span>
                <if(input.mandatory)>
                    &nbsp;<span class="hr-hf-label-mandatory">✱</span>
                </if>
            </label>
            <div class="field has-addons mb-1">
                <div class="control" no-update>
                    <input id=`hr_hf_el_${input.formId}_${input.id}` class="input hr-hf-text-input hr-hf-captcha-input" type="text" placeholder=(input.placeholder || "")/>
                </div>
                <div class="hr-hf-captcha-image" on-click("onCaptchaImageClick") id=`hr_hf_ci_${input.formId}_${input.id}` no-update/>
                <div class="hr-hf-captcha-image-reload" on-click("onCaptchaImageClick")>
                    <svg viewBox="0 0 24 24" width="12" height="12" xmlns="http://www.w3.org/2000/svg">
                        <path d=mdiReload/>
                    </svg>
                </div>
            </div>
            <if(state.error)>
                <div class="hr-hf-error-wrap-captcha">
                    <p class="tag is-danger hr-hf-error-tag">${state.error}</p>
                </div>
            </if>
            <if(input.helpText)>
                <p class="help">${input.helpText}</p>
            </if>
        </div>
    </div>
</if>
<!-- Captcha Field: End -->
<!-- Date Picker Field: Start -->
<if(input.type === "date")>
    <div>
        <div class="field">
            <label class="label hr-hf-label">
                ${input.label || ""}<span>:</span>
                <if(input.mandatory)>
                    &nbsp;<span class="hr-hf-label-mandatory">✱</span>
                </if>
            </label>
            <div class="control" id=`hr_hf_el_${input.formId}_${input.id}_input_wrap` no-update>
                <input on-focus("onDateInputFocus") id=`hr_hf_el_${input.formId}_${input.id}` class="input hr-hf-text-input input hr-hf-date-input" type="text" on-keypress("onCalendarInputKeypress") on-keydown("onCalendarInputKeydown")/>
            </div>
            <if(state.calendarVisible)>
                <div class="hr-hf-calendar-wrap" id=`hr_hf_el_${input.formId}_${input.id}_calendar_wrap`>
                    <hcalendar key=`hr_hf_el_${input.formId}_${input.id}_calendar` on-date-change("onCalendarDateChange")/>
                </div>
            </if>
            <if(state.error)>
                <div class="hr-hf-error-wrap">
                    <p class="tag is-danger hr-hf-error-tag">${state.error}</p>
                </div>
            </if>
            <if(input.helpText)>
                <p class="help">${input.helpText}</p>
            </if>
        </div>
    </div>
</if>
<!-- Date Picker Field: End -->
