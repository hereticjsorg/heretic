$ const attrs = Object.assign({}, input);
$ delete attrs.renderBody;
$ delete attrs.activeClass;
$ delete attrs.parentElement;
$ delete attrs.data;
$ const waitForLanguageData = () => {
    const timeout = 20000;
    const start = Date.now();
    const wait = (resolve, reject) => {
        if (component.languageData && Object.keys(component.languageData).length) {
            resolve();
        } else if (timeout && Date.now() - start >= timeout) {
            reject(new Error("Language data not loaded"));
        } else {
            setTimeout(wait.bind(this, resolve, reject), 30);
        }
    };
    return new Promise(wait);
};
<if(input.renderBody)>
    <if(!process.browser)>
        <await(waitForLanguageData())>
            <@then>
                <if(input.renderBody)>
                    <span ...attrs>
                        ${component.translate()}
                    </span>
                </if>
            </@then>
            <@catch|err|/>
        </await>
    </if>
    <if(process.browser)>
        <if(state.ready && input.renderBody)>
            <span ...attrs>
                ${component.translate()}
            </span>
        </if>
    </if>
</if>
