import navigation from "../../config/navigation-admin.json"
import languages from "../../config/languages.json"
import routes from "../../build/routes-admin.json"
import logo from "../../images/logo_dark.svg"
import { mdiGithub, mdiWeb } from "@mdi/js"

$ const i18nNavigation = out.global.i18nNavigation;
<nav class="navbar hr-navbar" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
        <span class="navbar-item">
            <img src=logo/>
        </span>
        <a
            id="hr_navbar_burger"
            onClick("onBurgerClick")
            role="button"
            class=`hr-navbar-burger navbar-burger${state.navOpen ? " is-active" : ""}`
            data-target="navbar">
            <span aria-hidden="true"/>
            <span aria-hidden="true"/>
            <span aria-hidden="true"/>
        </a>
    </div>
    <div id="navbar" class=`hr-navbar-menu navbar-menu${state.navOpen ? " is-active" : ""}`>
        <div class="navbar-start is-hidden-desktop">
            <for|item| of=navigation.routes>
                <if(typeof item === "string")>
                    <router-link-admin
                        route=item
                        class=`navbar-item hr-navbar-item${
                            state.route === item ? " hr-navbar-item-active" : ""
                        }`>
                        ${i18nNavigation[item]}
                    </router-link-admin>
                </if>
                <else>
                    <div class=`navbar-item has-dropdown${
                        state.navItemOpen === item.id ? " is-active" : ""
                    }`>
                        <a
                            class=`navbar-link hr-navbar-item${
                                state.navItemOpen === item.id
                                    ? " hr-navbar-item-open"
                                    : ""
                            }`
                            on-click("onNavbarItemClick")
                            id=`hr_navbar_item_${item.id}`>
                            ${i18nNavigation[item.id]}
                        </a>
                        <div class="navbar-dropdown hr-navbar-dropdown">
                            <for|subItem| of=item.routes>
                                <router-link-admin
                                    route=subItem
                                    class=`navbar-item hr-navbar-item${
                                        state.route === subItem
                                            ? " hr-navbar-item-active"
                                            : ""
                                    }`>
                                    ${i18nNavigation[subItem]}
                                </router-link-admin>
                            </for>
                        </div>
                    </div>
                </else>
            </for>
        </div>
        <div class="navbar-end">
            <div class=`navbar-item has-dropdown${state.langOpen ? " is-active" : ""}`>
                <a
                    class=`navbar-link hr-navbar-item-top is-arrowless${
                        state.langOpen ? " hr-navbar-item-open" : ""
                    }`
                    on-click("onLanguageClick")
                    id="hr_navbar_language">
                    <span class="is-hidden-touch">
                        <span class="icon hr-admin-icon">
                            <svg
                                viewBox="0 0 24 24"
                                width="24"
                                height="24"
                                xmlns="http://www.w3.org/2000/svg">
                                <path d=mdiWeb/>
                            </svg>
                        </span>
                        &nbsp;
                    </span>
                    <span class="is-hidden-desktop">Language</span>
                </a>
                <div class="navbar-dropdown is-right hr-navbar-dropdown">
                    <for|lang| of=Object.keys(languages)>
                        $ {
                            const currentURL = process.browser
                                                        ? component.getNonLocalizedURL(
                                                              window.location.pathname
                                                          ).url
                                                        : "/";
                        }
                        <a
                            class="navbar-item hr-navbar-item"
                            href=(
                                lang === Object.keys(languages)[0]
                                    ? currentURL
                                    : `/${lang}${currentURL}`
                            )>
                            ${languages[lang]}
                        </a>
                    </for>
                </div>
            </div>
        </div>
    </div>
</nav>